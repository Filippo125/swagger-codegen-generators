{{>partial_header}}
package {{packageName}}

import (
	"net/http"
	"strings"
	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
}

type Routes map[string]Route
type RouteHandlers map[string]http.HandlerFunc

var routes = Routes{
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
    "{{operationId}}": Route{
        "{{operationId}}",
        strings.ToUpper("{{httpMethod}}"),
        "{{{basePathWithoutHost}}}{{{path}}}",},

{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
}

func AddApiHandler(router *mux.Router, preHandles []PreHandlerFunc, {{#classNames}}imp{{this}} {{this}}, {{/classNames}}){
    var mappedRoutes = RouteHandlers{
   {{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
        "{{operationId}}": {{operationId}}Handler(imp{{classname}}),
   {{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
    }
	for key, handler := range mappedRoutes {
        route := routes[key]
        var handy http.Handler
        if len(preHandles) > 0 {
            handy = preHandles[0](handler, route.Name)
            for _, p := range preHandles[1:] {
            handy = p(handy, route.Name)
            }
        } else {
            handy = handler
        }

        router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handy)
	}
}

func AddApi(router *mux.Router, {{#classNames}}imp{{this}} {{this}}, {{/classNames}}){
    preHandles := []PreHandlerFunc{Logger}
    AddApiHandler(router, preHandles, {{#classNames}}imp{{this}}, {{/classNames}})
}

// GetRoutes returns the list of routes mapped
func GetRoutes() Routes {
    return routes
}

